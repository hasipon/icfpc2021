// Generated by Haxe 4.1.1
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.exists = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	Main.canvas = js_Boot.__cast(window.document.getElementById("pixi") , HTMLCanvasElement);
	Main.canvas.width = 1400;
	Main.canvas.height = 980;
	Main.problemCombo = window.document.getElementById("problem_combo");
	Main.answerText = window.document.getElementById("answer_text");
	var autoButton = window.document.getElementById("auto_button");
	Main.problemCombo.addEventListener("change",Main.selectProblem);
	Main.answerText.addEventListener("input",Main.onChangeAnswer);
	autoButton.addEventListener("mousedown",Main.onAutoDown);
	Main.pixi = new PIXI.Application({ view : Main.canvas, transparent : true, width : Main.canvas.width, height : Main.canvas.height, autoResize : true});
	Main.pixi.stage.interactive = true;
	Main.problems = [];
	Main.selectRect = null;
	Main.fetchProblem();
	Main.requestCount = 0;
};
Main.onChangeAnswer = function() {
	try {
		var a = JSON.parse(Main.answerText.value).vertices;
		if(a.length != Main.answer.length) {
			throw haxe_Exception.thrown("invalid point length");
		}
		var _g = 0;
		while(_g < a.length) {
			var point = a[_g];
			++_g;
			if(point.length != 2) {
				throw haxe_Exception.thrown("invalid point length");
			}
		}
		var _g = 0;
		var _g1 = a.length;
		while(_g < _g1) {
			var i = _g++;
			Main.answer[i][0] = Math.round(a[i][0]);
			Main.answer[i][1] = Math.round(a[i][1]);
		}
		Main.drawAnswer();
		Main.updateScore();
	} catch( _g ) {
		var e = haxe_Exception.caught(_g);
		haxe_Log.trace(e,{ fileName : "src/Main.hx", lineNumber : 102, className : "Main", methodName : "onChangeAnswer"});
	}
};
Main.fetchProblem = function() {
	Main.problems = JSON.parse(haxe_Resource.getString("problems"));
	Main.start();
	var _g = 0;
	var _g1 = Main.problems.length;
	while(_g < _g1) {
		var index = _g++;
		var element = window.document.createElement("option");
		element.setAttribute("value","" + (index + 1));
		element.innerHTML = "" + (index + 1);
		Main.problemCombo.appendChild(element);
	}
};
Main.start = function() {
	var background = new PIXI.Graphics();
	background.beginFill(13421772);
	background.drawRect(0,0,Main.canvas.width,Main.canvas.height);
	Main.pixi.stage.addChild(background);
	Main.problemGraphics = new PIXI.Graphics();
	Main.pixi.stage.addChild(Main.problemGraphics);
	Main.answerGraphics = new PIXI.Graphics();
	Main.pixi.stage.addChild(Main.answerGraphics);
	Main.selectGraphics = new PIXI.Graphics();
	Main.pixi.stage.addChild(Main.selectGraphics);
	Main.startPoints = [];
	Main.selectedPoints = [];
	Main.readProblem(0);
	Main.pixi.stage.on("mousedown",Main.onMouseDown);
	Main.pixi.stage.on("mousemove",Main.onMouseMove);
	window.document.addEventListener("mouseup",Main.onMouseUp);
	window.requestAnimationFrame(Main.onEnterFrame);
};
Main.onEnterFrame = function(f) {
	if(Main.autoDown) {
		var _g = 0;
		while(_g < 1000) {
			var i = _g++;
			var _g1 = [];
			var _g2 = 0;
			var _g3 = Main.answer;
			while(_g2 < _g3.length) {
				var _ = _g3[_g2];
				++_g2;
				_g1.push(0);
			}
			var count = _g1;
			var _g4 = [];
			var _g5 = 0;
			var _g6 = Main.answer;
			while(_g5 < _g6.length) {
				var _1 = _g6[_g5];
				++_g5;
				_g4.push([0.0,0.0]);
			}
			var velocities = _g4;
			var e = Main.problem.epsilon / 1000000;
			var matched = true;
			var _g7 = 0;
			var _g8 = Main.problem.figure.edges;
			while(_g7 < _g8.length) {
				var edge = _g8[_g7];
				++_g7;
				var ax = Main.answer[edge[0]][0] - Main.answer[edge[1]][0];
				var ay = Main.answer[edge[0]][1] - Main.answer[edge[1]][1];
				var ad = ax * ax + ay * ay;
				var px = Main.problem.figure.vertices[edge[0]][0] - Main.problem.figure.vertices[edge[1]][0];
				var py = Main.problem.figure.vertices[edge[0]][1] - Main.problem.figure.vertices[edge[1]][1];
				var pd = px * px + py * py;
				if(!(Math.abs(ad / pd - 1) <= e)) {
					count[edge[0]] += 1;
					count[edge[1]] += 1;
					var v = (Math.sqrt(ad) - Math.sqrt(pd)) / 3;
					var d = Math.atan2(ay,ax);
					velocities[edge[0]][0] -= v * Math.cos(d);
					velocities[edge[0]][1] -= v * Math.sin(d);
					velocities[edge[1]][0] += v * Math.cos(d);
					velocities[edge[1]][1] += v * Math.sin(d);
					matched = false;
				}
			}
			if(matched) {
				break;
			}
			var _g9 = 0;
			var _g10 = Main.answer.length;
			while(_g9 < _g10) {
				var i1 = _g9++;
				var v1 = velocities[i1];
				var c = count[i1];
				if(c != 0) {
					Main.answer[i1][0] = Math.round(Main.answer[i1][0] + v1[0] / c + Math.random() - 0.5);
					Main.answer[i1][1] = Math.round(Main.answer[i1][1] + v1[1] / c + Math.random() - 0.5);
				}
			}
		}
		Main.drawAnswer();
		Main.outputAnswer();
	}
	window.requestAnimationFrame(Main.onEnterFrame);
};
Main.selectProblem = function(e) {
	Main.readProblem(Main.problemCombo.selectedIndex);
};
Main.onAutoDown = function() {
	Main.autoDown = true;
};
Main.onMouseUp = function() {
	if(Main.selectedPoints.length >= 0) {
		Main.outputAnswer();
	}
	if(Main.selectRect != null) {
		Main.selectRect = null;
	}
	Main.autoDown = false;
	Main.selectedPoints.length = 0;
	Main.selectGraphics.clear();
};
Main.outputAnswer = function() {
	Main.updateScore();
	Main.answerText.value = JSON.stringify({ vertices : Main.answer});
};
Main.updateScore = function() {
	var dislike = 0.0;
	var _g = 0;
	var _g1 = Main.problem.hole;
	while(_g < _g1.length) {
		var hole = _g1[_g];
		++_g;
		var min = Infinity;
		var hx = hole[0];
		var hy = hole[1];
		var _g2 = 0;
		var _g3 = Main.answer;
		while(_g2 < _g3.length) {
			var a = _g3[_g2];
			++_g2;
			var dx = hx - a[0];
			var dy = hy - a[1];
			var value = dx * dx + dy * dy;
			if(value < min) {
				min = value;
			}
		}
		dislike += min;
	}
	window.document.getElementById("dislike").textContent = "" + dislike;
	Main.requestValidate();
};
Main.requestValidate = function() {
	var r = Main.requestCount += 1;
	var h = new haxe_http_HttpJs("http://13.114.46.162:8800/eval/" + (Main.problemIndex + 1));
	h.onData = function(d) {
		if(Main.requestCount == r) {
			window.document.getElementById("response").textContent = d;
		}
	};
	h.onError = function(e) {
	};
	h.setPostData(JSON.stringify({ vertices : Main.answer}));
	h.request(true);
};
Main.onMouseDown = function(e) {
	Main.selectedPoints.length = 0;
	var nearest = 500;
	var i = 0;
	var _g = 0;
	var _g1 = Main.answer;
	while(_g < _g1.length) {
		var point = _g1[_g];
		++_g;
		var x = (point[0] - Main.left) * Main.scale;
		var y = (point[1] - Main.top) * Main.scale;
		var dx = x - e.data.global.x;
		var dy = y - e.data.global.y;
		var d = dx * dx + dy * dy;
		if(nearest > d) {
			Main.selectedPoints.push(i);
		}
		++i;
	}
	if(Main.selectedPoints.length >= 1) {
		Main.selectGraphics.clear();
		Main.selectGraphics.beginFill(13369344);
		Main.startPoints.length = 0;
		var _g = 0;
		var _g1 = Main.selectedPoints;
		while(_g < _g1.length) {
			var selectedPoint = _g1[_g];
			++_g;
			var point = Main.answer[selectedPoint];
			var x = (point[0] - Main.left) * Main.scale;
			var y = (point[1] - Main.top) * Main.scale;
			Main.selectGraphics.drawCircle(x,y,3);
			Main.startPoints.push(new PIXI.Point(e.data.global.x,e.data.global.y));
			Main.startX = point[0];
			Main.startY = point[1];
		}
	} else {
		Main.selectRect = new PIXI.Rectangle();
		Main.selectRect.x = e.data.global.x;
		Main.selectRect.y = e.data.global.y;
		Main.selectRect.width = 0;
		Main.selectRect.height = 0;
	}
};
Main.onMouseMove = function(e) {
	if(Main.selectedPoints.length > 0) {
		var _g = 0;
		var _g1 = Main.selectedPoints.length;
		while(_g < _g1) {
			var i = _g++;
			var dx = e.data.global.x - Main.startPoints[i].x;
			var dy = e.data.global.y - Main.startPoints[i].y;
			Main.answer[Main.selectedPoints[i]][0] = Math.round(Main.startX + dx / Main.scale);
			Main.answer[Main.selectedPoints[i]][1] = Math.round(Main.startY + dy / Main.scale);
			Main.drawAnswer();
		}
	}
	if(Main.selectRect != null) {
		Main.selectRect.width = e.data.global.x - Main.selectRect.x;
		Main.selectRect.height = e.data.global.y - Main.selectRect.y;
		Main.selectGraphics.clear();
		Main.selectGraphics.beginFill(13369344);
		Main.selectGraphics.drawRect(Main.selectRect.x,Main.selectRect.y,Main.selectRect.width,Main.selectRect.height);
	}
};
Main.readProblem = function(index) {
	Main.selectedPoints.length = 0;
	Main.problem = Main.problems[index];
	Main.left = Main.right = Main.problem.hole[0][0];
	Main.top = Main.bottom = Main.problem.hole[0][1];
	Main.problemIndex = index;
	var _g = 0;
	var _g1 = Main.problem.hole;
	while(_g < _g1.length) {
		var point = _g1[_g];
		++_g;
		if(Main.left > point[0]) {
			Main.left = point[0];
		}
		if(Main.right < point[0]) {
			Main.right = point[0];
		}
		if(Main.top > point[1]) {
			Main.top = point[1];
		}
		if(Main.bottom < point[1]) {
			Main.bottom = point[1];
		}
	}
	var _g = 0;
	var _g1 = Main.problem.figure.vertices;
	while(_g < _g1.length) {
		var point = _g1[_g];
		++_g;
		if(Main.left > point[0]) {
			Main.left = point[0];
		}
		if(Main.right < point[0]) {
			Main.right = point[0];
		}
		if(Main.top > point[1]) {
			Main.top = point[1];
		}
		if(Main.bottom < point[1]) {
			Main.bottom = point[1];
		}
	}
	Main.left -= 3;
	Main.right += 3;
	Main.top -= 3;
	Main.bottom += 3;
	var w = Main.right - Main.left;
	var h = Main.bottom - Main.top;
	var sw = Main.canvas.width / w;
	var sh = Main.canvas.height / h;
	Main.scale = sw > sh ? sh : sw;
	var first = true;
	Main.problemGraphics.clear();
	Main.problemGraphics.beginFill(15724527);
	Main.problemGraphics.lineStyle(1,559240);
	var _g = 0;
	var _g1 = Main.problem.hole;
	while(_g < _g1.length) {
		var hole = _g1[_g];
		++_g;
		var x = (hole[0] - Main.left) * Main.scale;
		var y = (hole[1] - Main.top) * Main.scale;
		if(first) {
			Main.problemGraphics.moveTo(x,y);
		} else {
			Main.problemGraphics.lineTo(x,y);
		}
		first = false;
	}
	Main.problemGraphics.endFill();
	Main.answer = [];
	var _g = 0;
	var _g1 = Main.problem.figure.vertices;
	while(_g < _g1.length) {
		var point = _g1[_g];
		++_g;
		Main.answer.push([point[0],point[1]]);
	}
	Main.drawAnswer();
	Main.outputAnswer();
};
Main.drawAnswer = function() {
	var first = true;
	Main.answerGraphics.clear();
	Main.answerGraphics.beginFill(52224);
	var _g = 0;
	var _g1 = Main.answer;
	while(_g < _g1.length) {
		var point = _g1[_g];
		++_g;
		var x = (point[0] - Main.left) * Main.scale;
		var y = (point[1] - Main.top) * Main.scale;
		Main.answerGraphics.drawCircle(x,y,3);
		first = false;
	}
	Main.answerGraphics.endFill();
	var e = Main.problem.epsilon / 1000000;
	var _g = 0;
	var _g1 = Main.problem.figure.edges;
	while(_g < _g1.length) {
		var edge = _g1[_g];
		++_g;
		var ax = Main.answer[edge[0]][0] - Main.answer[edge[1]][0];
		var ay = Main.answer[edge[0]][1] - Main.answer[edge[1]][1];
		var ad = ax * ax + ay * ay;
		var px = Main.problem.figure.vertices[edge[0]][0] - Main.problem.figure.vertices[edge[1]][0];
		var py = Main.problem.figure.vertices[edge[0]][1] - Main.problem.figure.vertices[edge[1]][1];
		var pd = px * px + py * py;
		var tmp = Main.answerGraphics;
		var tmp1;
		if(Math.abs(ad / pd - 1) <= e) {
			tmp1 = 52224;
		} else if(ad > pd) {
			var value = (ad / pd - 1) / 3;
			var rate = value <= 0.0 ? 0.0 : 1.0 <= value ? 1.0 : value;
			var color_r = 0.6 * (1 - rate) + 0.9 * rate;
			var color_g = 0.4 * (1 - rate) + 0.0 * rate;
			var color_b = 0;
			var r = color_r;
			var g = color_g;
			var b = color_b;
			if(r <= 0.0) {
				r = 0.0;
			} else if(1.0 <= r) {
				r = 1.0;
			}
			if(g <= 0.0) {
				g = 0.0;
			} else if(1.0 <= g) {
				g = 1.0;
			}
			if(b <= 0.0) {
				b = 0.0;
			} else if(1.0 <= b) {
				b = 1.0;
			}
			tmp1 = (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
		} else {
			haxe_Log.trace(ad,{ fileName : "src/Main.hx", lineNumber : 437, className : "Main", methodName : "drawAnswer", customParams : [pd]});
			var value1 = (pd / ad - 1) / 3;
			var rate1 = value1 <= 0.0 ? 0.0 : 1.0 <= value1 ? 1.0 : value1;
			var color_r1 = 0;
			var color_g1 = 0.4 * (1 - rate1) + 0.0 * rate1;
			var color_b1 = 0.6 * (1 - rate1) + 0.9 * rate1;
			var r1 = color_r1;
			var g1 = color_g1;
			var b1 = color_b1;
			if(r1 <= 0.0) {
				r1 = 0.0;
			} else if(1.0 <= r1) {
				r1 = 1.0;
			}
			if(g1 <= 0.0) {
				g1 = 0.0;
			} else if(1.0 <= g1) {
				g1 = 1.0;
			}
			if(b1 <= 0.0) {
				b1 = 0.0;
			} else if(1.0 <= b1) {
				b1 = 1.0;
			}
			tmp1 = (r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0);
		}
		tmp.lineStyle(2,tmp1);
		var x = (Main.answer[edge[0]][0] - Main.left) * Main.scale;
		var y = (Main.answer[edge[0]][1] - Main.top) * Main.scale;
		Main.answerGraphics.moveTo(x,y);
		var x1 = (Main.answer[edge[1]][0] - Main.left) * Main.scale;
		var y1 = (Main.answer[edge[1]][1] - Main.top) * Main.scale;
		Main.answerGraphics.lineTo(x1,y1);
	}
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
});
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
haxe_Resource.__name__ = true;
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
haxe_http_HttpBase.__name__ = true;
haxe_http_HttpBase.prototype = {
	setPostData: function(data) {
		this.postData = data;
		this.postBytes = null;
	}
	,onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return !Reflect.compareMethods($bind(this,this.onData),this.emptyOnData);
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
};
var haxe_http_HttpJs = function(url) {
	this.async = true;
	this.withCredentials = false;
	haxe_http_HttpBase.call(this,url);
};
haxe_http_HttpJs.__name__ = true;
haxe_http_HttpJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( _g ) {
				s = null;
			}
			if(s == 0 && typeof(window) != "undefined" && $global.location != null) {
				var protocol = $global.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					s = r.response != null ? 200 : 404;
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				_gthis.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				_gthis.req = null;
				_gthis.success(haxe_io_Bytes.ofData(r.response));
			} else if(s == null || s == 0 && r.response == null) {
				_gthis.req = null;
				_gthis.onError("Failed to connect or resolve host");
			} else if(s == null) {
				_gthis.req = null;
				var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
				_gthis.responseBytes = onreadystatechange;
				_gthis.onError("Http Error #" + r.status);
			} else {
				switch(s) {
				case 12007:
					_gthis.req = null;
					_gthis.onError("Unknown host");
					break;
				case 12029:
					_gthis.req = null;
					_gthis.onError("Failed to connect to host");
					break;
				default:
					_gthis.req = null;
					var onreadystatechange = r.response != null ? haxe_io_Bytes.ofData(r.response) : null;
					_gthis.responseBytes = onreadystatechange;
					_gthis.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri;
		var _g = this.postBytes;
		var _g1 = this.postData;
		if(_g1 == null) {
			if(_g == null) {
				uri = null;
			} else {
				var bytes = _g;
				uri = new Blob([bytes.b.bufferValue]);
			}
		} else if(_g == null) {
			var str = _g1;
			uri = str;
		} else {
			uri = null;
		}
		if(uri != null) {
			post = true;
		} else {
			var _g = 0;
			var _g1 = this.params;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri == null) {
					uri = "";
				} else {
					uri = (uri == null ? "null" : Std.string(uri)) + "&";
				}
				var s = p.name;
				var value = (uri == null ? "null" : Std.string(uri)) + encodeURIComponent(s) + "=";
				var s1 = p.value;
				uri = value + encodeURIComponent(s1);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + (uri == null ? "null" : Std.string(uri)),this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
			r.responseType = "arraybuffer";
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			this.req = null;
			this.onError(e.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.name == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var h = _g1[_g];
			++_g;
			r.setRequestHeader(h.name,h.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,__class__: haxe_http_HttpJs
});
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw haxe_Exception.thrown("Unable to create XMLHttpRequest object.");
};
Math.__name__ = true;
var tweenxcore_Easing = function() { };
tweenxcore_Easing.__name__ = true;
tweenxcore_Easing.linear = function(t) {
	return t;
};
tweenxcore_Easing.sineIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return 1 - Math.cos(t * 1.5707963267948966);
	}
};
tweenxcore_Easing.sineOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return Math.sin(t * 1.5707963267948966);
	}
};
tweenxcore_Easing.sineInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return -0.5 * (Math.cos(3.1415926535897932384626433832795 * t) - 1);
	}
};
tweenxcore_Easing.sineOutIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if(t < 0.5) {
		return 0.5 * Math.sin(t * 2 * 1.5707963267948966);
	} else {
		return -0.5 * Math.cos((t * 2 - 1) * 1.5707963267948966) + 1;
	}
};
tweenxcore_Easing.quadIn = function(t) {
	return t * t;
};
tweenxcore_Easing.quadOut = function(t) {
	return -t * (t - 2);
};
tweenxcore_Easing.quadInOut = function(t) {
	if(t < 0.5) {
		return 2 * t * t;
	} else {
		return -2 * (--t * t) + 1;
	}
};
tweenxcore_Easing.quadOutIn = function(t) {
	if(t < 0.5) {
		return -0.5 * (t *= 2) * (t - 2);
	} else {
		t = t * 2 - 1;
		return 0.5 * t * t + 0.5;
	}
};
tweenxcore_Easing.cubicIn = function(t) {
	return t * t * t;
};
tweenxcore_Easing.cubicOut = function(t) {
	return --t * t * t + 1;
};
tweenxcore_Easing.cubicInOut = function(t) {
	if((t *= 2) < 1) {
		return 0.5 * t * t * t;
	} else {
		return 0.5 * ((t -= 2) * t * t + 2);
	}
};
tweenxcore_Easing.cubicOutIn = function(t) {
	t = t * 2 - 1;
	return 0.5 * (t * t * t + 1);
};
tweenxcore_Easing.quartIn = function(t) {
	return (t *= t) * t;
};
tweenxcore_Easing.quartOut = function(t) {
	t = --t * t;
	return 1 - t * t;
};
tweenxcore_Easing.quartInOut = function(t) {
	if((t *= 2) < 1) {
		return 0.5 * (t *= t) * t;
	} else {
		t = (t -= 2) * t;
		return -0.5 * (t * t - 2);
	}
};
tweenxcore_Easing.quartOutIn = function(t) {
	if(t < 0.5) {
		t = t * 2 - 1;
		return -0.5 * (t *= t) * t + 0.5;
	} else {
		t = t * 2 - 1;
		return 0.5 * (t *= t) * t + 0.5;
	}
};
tweenxcore_Easing.quintIn = function(t) {
	return t * (t *= t) * t;
};
tweenxcore_Easing.quintOut = function(t) {
	return --t * (t *= t) * t + 1;
};
tweenxcore_Easing.quintInOut = function(t) {
	if((t *= 2) < 1) {
		return 0.5 * t * (t *= t) * t;
	} else {
		return 0.5 * (t -= 2) * (t *= t) * t + 1;
	}
};
tweenxcore_Easing.quintOutIn = function(t) {
	t = t * 2 - 1;
	return 0.5 * (t * (t *= t) * t + 1);
};
tweenxcore_Easing.expoIn = function(t) {
	if(t == 0) {
		return 0;
	} else {
		return Math.exp(6.931471805599453 * (t - 1));
	}
};
tweenxcore_Easing.expoOut = function(t) {
	if(t == 1) {
		return 1;
	} else {
		return 1 - Math.exp(-6.9314718055994531 * t);
	}
};
tweenxcore_Easing.expoInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if((t *= 2) < 1) {
		return 0.5 * Math.exp(6.931471805599453 * (t - 1));
	} else {
		return 0.5 * (2 - Math.exp(-6.9314718055994531 * (t - 1)));
	}
};
tweenxcore_Easing.expoOutIn = function(t) {
	if(t < 0.5) {
		return 0.5 * (1 - Math.exp(-13.862943611198906 * t));
	} else if(t == 0.5) {
		return 0.5;
	} else {
		return 0.5 * (Math.exp(13.862943611198906 * (t - 1)) + 1);
	}
};
tweenxcore_Easing.circIn = function(t) {
	if(t < -1 || 1 < t) {
		return 0;
	} else {
		return 1 - Math.sqrt(1 - t * t);
	}
};
tweenxcore_Easing.circOut = function(t) {
	if(t < 0 || 2 < t) {
		return 0;
	} else {
		return Math.sqrt(t * (2 - t));
	}
};
tweenxcore_Easing.circInOut = function(t) {
	if(t < -0.5 || 1.5 < t) {
		return 0.5;
	} else if((t *= 2) < 1) {
		return -0.5 * (Math.sqrt(1 - t * t) - 1);
	} else {
		return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
	}
};
tweenxcore_Easing.circOutIn = function(t) {
	if(t < 0) {
		return 0;
	} else if(1 < t) {
		return 1;
	} else if(t < 0.5) {
		t = t * 2 - 1;
		return 0.5 * Math.sqrt(1 - t * t);
	} else {
		t = t * 2 - 1;
		return -0.5 * (Math.sqrt(1 - t * t) - 1 - 1);
	}
};
tweenxcore_Easing.bounceIn = function(t) {
	t = 1 - t;
	if(t < 0.36363636363636365) {
		return 1 - 7.5625 * t * t;
	} else if(t < 0.72727272727272729) {
		return 1 - (7.5625 * (t -= 0.54545454545454541) * t + 0.75);
	} else if(t < 0.90909090909090906) {
		return 1 - (7.5625 * (t -= 0.81818181818181823) * t + 0.9375);
	} else {
		return 1 - (7.5625 * (t -= 0.95454545454545459) * t + 0.984375);
	}
};
tweenxcore_Easing.bounceOut = function(t) {
	if(t < 0.36363636363636365) {
		return 7.5625 * t * t;
	} else if(t < 0.72727272727272729) {
		return 7.5625 * (t -= 0.54545454545454541) * t + 0.75;
	} else if(t < 0.90909090909090906) {
		return 7.5625 * (t -= 0.81818181818181823) * t + 0.9375;
	} else {
		return 7.5625 * (t -= 0.95454545454545459) * t + 0.984375;
	}
};
tweenxcore_Easing.bounceInOut = function(t) {
	if(t < 0.5) {
		t = 1 - t * 2;
		if(t < 0.36363636363636365) {
			return (1 - 7.5625 * t * t) * 0.5;
		} else if(t < 0.72727272727272729) {
			return (1 - (7.5625 * (t -= 0.54545454545454541) * t + 0.75)) * 0.5;
		} else if(t < 0.90909090909090906) {
			return (1 - (7.5625 * (t -= 0.81818181818181823) * t + 0.9375)) * 0.5;
		} else {
			return (1 - (7.5625 * (t -= 0.95454545454545459) * t + 0.984375)) * 0.5;
		}
	} else {
		t = t * 2 - 1;
		if(t < 0.36363636363636365) {
			return 7.5625 * t * t * 0.5 + 0.5;
		} else if(t < 0.72727272727272729) {
			return (7.5625 * (t -= 0.54545454545454541) * t + 0.75) * 0.5 + 0.5;
		} else if(t < 0.90909090909090906) {
			return (7.5625 * (t -= 0.81818181818181823) * t + 0.9375) * 0.5 + 0.5;
		} else {
			return (7.5625 * (t -= 0.95454545454545459) * t + 0.984375) * 0.5 + 0.5;
		}
	}
};
tweenxcore_Easing.bounceOutIn = function(t) {
	if(t < 0.5) {
		if((t *= 2) < 0.36363636363636365) {
			return 0.5 * (7.5625 * t * t);
		} else if(t < 0.72727272727272729) {
			return 0.5 * (7.5625 * (t -= 0.54545454545454541) * t + 0.75);
		} else if(t < 0.90909090909090906) {
			return 0.5 * (7.5625 * (t -= 0.81818181818181823) * t + 0.9375);
		} else {
			return 0.5 * (7.5625 * (t -= 0.95454545454545459) * t + 0.984375);
		}
	} else {
		t = 1 - (t * 2 - 1);
		if(t < 0.36363636363636365) {
			return 0.5 - 0.5 * (7.5625 * t * t) + 0.5;
		} else if(t < 0.72727272727272729) {
			return 0.5 - 0.5 * (7.5625 * (t -= 0.54545454545454541) * t + 0.75) + 0.5;
		} else if(t < 0.90909090909090906) {
			return 0.5 - 0.5 * (7.5625 * (t -= 0.81818181818181823) * t + 0.9375) + 0.5;
		} else {
			return 0.5 - 0.5 * (7.5625 * (t -= 0.95454545454545459) * t + 0.984375) + 0.5;
		}
	}
};
tweenxcore_Easing.backIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return t * t * (2.70158 * t - 1.70158);
	}
};
tweenxcore_Easing.backOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return --t * t * (2.70158 * t + 1.70158) + 1;
	}
};
tweenxcore_Easing.backInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if((t *= 2) < 1) {
		return 0.5 * (t * t * (3.5949095 * t - 2.5949095));
	} else {
		return 0.5 * ((t -= 2) * t * (3.5949095 * t + 2.5949095) + 2);
	}
};
tweenxcore_Easing.backOutIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if(t < 0.5) {
		t = t * 2 - 1;
		return 0.5 * (t * t * (2.70158 * t + 1.70158) + 1);
	} else {
		t = t * 2 - 1;
		return 0.5 * t * t * (2.70158 * t - 1.70158) + 0.5;
	}
};
tweenxcore_Easing.elasticIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		var s = 7.5e-005;
		return -(Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003));
	}
};
tweenxcore_Easing.elasticOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		var s = 7.5e-005;
		return Math.exp(-6.9314718055994531 * t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003) + 1;
	}
};
tweenxcore_Easing.elasticInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		var s = 7.5e-005;
		if((t *= 2) < 1) {
			return -0.5 * (Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003));
		} else {
			return Math.exp(-6.9314718055994531 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003) * 0.5 + 1;
		}
	}
};
tweenxcore_Easing.elasticOutIn = function(t) {
	if(t < 0.5) {
		if((t *= 2) == 0) {
			return 0;
		} else {
			var s = 7.5e-005;
			return 0.5 * Math.exp(-6.9314718055994531 * t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003) + 0.5;
		}
	} else if(t == 0.5) {
		return 0.5;
	} else if(t == 1) {
		return 1;
	} else {
		t = t * 2 - 1;
		var s = 7.5e-005;
		return -(0.5 * Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003)) + 0.5;
	}
};
tweenxcore_Easing.warpOut = function(t) {
	if(t <= 0) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpIn = function(t) {
	if(t < 1) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpInOut = function(t) {
	if(t < 0.5) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpOutIn = function(t) {
	if(t <= 0) {
		return 0;
	} else if(t < 1) {
		return 0.5;
	} else {
		return 1;
	}
};
var tweenxcore_FloatTools = function() { };
tweenxcore_FloatTools.__name__ = true;
tweenxcore_FloatTools.revert = function(rate) {
	return 1 - rate;
};
tweenxcore_FloatTools.clamp = function(value,min,max) {
	if(max == null) {
		max = 1.0;
	}
	if(min == null) {
		min = 0.0;
	}
	if(value <= min) {
		return min;
	} else if(max <= value) {
		return max;
	} else {
		return value;
	}
};
tweenxcore_FloatTools.lerp = function(rate,from,to) {
	return from * (1 - rate) + to * rate;
};
tweenxcore_FloatTools.inverseLerp = function(value,from,to) {
	return (value - from) / (to - from);
};
tweenxcore_FloatTools.repeat = function(value,from,to) {
	if(to == null) {
		to = 1.0;
	}
	if(from == null) {
		from = 0.0;
	}
	var p = (value - from) / (to - from);
	return p - Math.floor(p);
};
tweenxcore_FloatTools.shake = function(rate,center,randomFunc) {
	if(center == null) {
		center = 0.0;
	}
	if(randomFunc == null) {
		randomFunc = Math.random;
	}
	var rate1 = randomFunc();
	return center + (-rate * (1 - rate1) + rate * rate1);
};
tweenxcore_FloatTools.spread = function(rate,scale) {
	return -scale * (1 - rate) + scale * rate;
};
tweenxcore_FloatTools.sinByRate = function(rate) {
	return Math.sin(rate * 2 * Math.PI);
};
tweenxcore_FloatTools.cosByRate = function(rate) {
	return Math.cos(rate * 2 * Math.PI);
};
tweenxcore_FloatTools.yoyo = function(rate,easing) {
	return easing((rate < 0.5 ? rate : 1 - rate) * 2);
};
tweenxcore_FloatTools.zigzag = function(rate,easing) {
	if(rate < 0.5) {
		return easing(rate * 2);
	} else {
		return 1 - easing((rate - 0.5) * 2);
	}
};
tweenxcore_FloatTools.mixEasing = function(rate,easing1,easing2,easing2Strength) {
	if(easing2Strength == null) {
		easing2Strength = 0.5;
	}
	return easing1(rate) * (1 - easing2Strength) + easing2(rate) * easing2Strength;
};
tweenxcore_FloatTools.crossfadeEasing = function(rate,easing1,easing2,easing2StrengthEasing,easing2StrengthStart,easing2StrengthEnd) {
	if(easing2StrengthEnd == null) {
		easing2StrengthEnd = 1;
	}
	if(easing2StrengthStart == null) {
		easing2StrengthStart = 0;
	}
	var rate1 = easing2StrengthEasing(rate);
	var rate2 = easing2StrengthStart * (1 - rate1) + easing2StrengthEnd * rate1;
	return easing1(rate) * (1 - rate2) + easing2(rate) * rate2;
};
tweenxcore_FloatTools.connectEasing = function(time,easing1,easing2,switchTime,switchValue) {
	if(switchValue == null) {
		switchValue = 0.5;
	}
	if(switchTime == null) {
		switchTime = 0.5;
	}
	if(time < switchTime) {
		var rate = easing1(time / switchTime);
		return 0 * (1 - rate) + switchValue * rate;
	} else {
		var rate = easing2((time - switchTime) / (1 - switchTime));
		return switchValue * (1 - rate) + rate;
	}
};
tweenxcore_FloatTools.oneTwoEasing = function(time,easingOne,easingTwo,switchTime) {
	if(switchTime == null) {
		switchTime = 0.5;
	}
	if(time < switchTime) {
		return easingOne(time / switchTime);
	} else {
		return easingTwo((time - switchTime) / (1 - switchTime));
	}
};
tweenxcore_FloatTools.binarySearch = function(sortedValues,value,boundaryMode) {
	if(boundaryMode == null) {
		boundaryMode = 0;
	}
	var min = 0;
	var max = sortedValues.length;
	if(boundaryMode == 0) {
		while(true) {
			var next = ((max - min) / 2 | 0) + min;
			var dv = sortedValues[next];
			if(dv <= value) {
				min = next + 1;
			} else {
				max = next;
			}
			if(min == max) {
				break;
			}
		}
	} else {
		while(true) {
			var next = ((max - min) / 2 | 0) + min;
			var dv = sortedValues[next];
			if(dv < value) {
				min = next + 1;
			} else {
				max = next;
			}
			if(min == max) {
				break;
			}
		}
	}
	return min;
};
tweenxcore_FloatTools.polyline = function(rate,values) {
	if(values.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else {
		var max = values.length - 1;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		return values[index] * (1 - innerRate) + values[index + 1] * innerRate;
	}
};
tweenxcore_FloatTools.bezier2 = function(rate,from,control,to) {
	return (from * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + to * rate) * rate;
};
tweenxcore_FloatTools.bezier3 = function(rate,from,control1,control2,to) {
	var control = control1 * (1 - rate) + control2 * rate;
	return ((from * (1 - rate) + control1 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control2 * (1 - rate) + to * rate) * rate) * rate;
};
tweenxcore_FloatTools.bezier = function(rate,values) {
	if(values.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(values.length == 2) {
		return values[0] * (1 - rate) + values[1] * rate;
	} else if(values.length == 3) {
		var control = values[1];
		return (values[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + values[2] * rate) * rate;
	} else {
		return tweenxcore_FloatTools._bezier(rate,values);
	}
};
tweenxcore_FloatTools._bezier = function(rate,values) {
	if(values.length == 4) {
		var control1 = values[1];
		var control2 = values[2];
		var control = control1 * (1 - rate) + control2 * rate;
		return ((values[0] * (1 - rate) + control1 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control2 * (1 - rate) + values[3] * rate) * rate) * rate;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = values.length - 1;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(values[i] * (1 - rate) + values[i + 1] * rate);
	}
	return tweenxcore_FloatTools._bezier(rate,_g);
};
tweenxcore_FloatTools.uniformQuadraticBSpline = function(rate,values) {
	if(values.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(values.length == 2) {
		return values[0] * (1 - rate) + values[1] * rate;
	} else {
		var max = values.length - 2;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		var p0 = values[index];
		var p1 = values[index + 1];
		var p2 = values[index + 2];
		return innerRate * innerRate * (p0 / 2 - p1 + p2 / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
};
tweenxcore_FloatTools.frameToSecond = function(frame,fps) {
	return frame / fps;
};
tweenxcore_FloatTools.secondToFrame = function(second,fps) {
	return second * fps;
};
tweenxcore_FloatTools.degreeToRate = function(degree) {
	return degree / 360;
};
tweenxcore_FloatTools.rateToDegree = function(rate) {
	return rate * 360;
};
tweenxcore_FloatTools.radianToRate = function(radian) {
	return radian / (2 * Math.PI);
};
tweenxcore_FloatTools.rateToRadian = function(rate) {
	return rate * 2 * Math.PI;
};
tweenxcore_FloatTools.millisecondToBeat = function(millisecond,bpm) {
	return millisecond * bpm / 60000;
};
tweenxcore_FloatTools.beatToMillisecond = function(beat,bpm) {
	return beat * 60000 / bpm;
};
var tweenxcore_PointTools = function() { };
tweenxcore_PointTools.__name__ = true;
tweenxcore_PointTools.polyline = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var p = $getIterator(points);
	while(p.hasNext()) {
		var p1 = p.next();
		xs.push(p1.x);
		ys.push(p1.y);
	}
	var tmp;
	if(xs.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else {
		var max = xs.length - 1;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		tmp = xs[index] * (1 - innerRate) + xs[index + 1] * innerRate;
	}
	outputPoint.x = tmp;
	var tmp;
	if(ys.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else {
		var max = ys.length - 1;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		tmp = ys[index] * (1 - innerRate) + ys[index + 1] * innerRate;
	}
	outputPoint.y = tmp;
};
tweenxcore_PointTools.bezier2 = function(outputPoint,rate,from,control,to) {
	var control1 = control.x;
	outputPoint.x = (from.x * (1 - rate) + control1 * rate) * (1 - rate) + (control1 * (1 - rate) + from.x * rate) * rate;
	var control1 = control.y;
	outputPoint.y = (from.y * (1 - rate) + control1 * rate) * (1 - rate) + (control1 * (1 - rate) + from.y * rate) * rate;
};
tweenxcore_PointTools.bezier3 = function(outputPoint,rate,from,control1,control2,to) {
	var control11 = control1.x;
	var control21 = control2.x;
	var control = control11 * (1 - rate) + control21 * rate;
	outputPoint.x = ((from.x * (1 - rate) + control11 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control21 * (1 - rate) + from.x * rate) * rate) * rate;
	var control11 = control1.y;
	var control21 = control2.y;
	var control = control11 * (1 - rate) + control21 * rate;
	outputPoint.y = ((from.y * (1 - rate) + control11 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control21 * (1 - rate) + from.y * rate) * rate) * rate;
};
tweenxcore_PointTools.bezier = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var p = $getIterator(points);
	while(p.hasNext()) {
		var p1 = p.next();
		xs.push(p1.x);
		ys.push(p1.y);
	}
	var tmp;
	if(xs.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(xs.length == 2) {
		tmp = xs[0] * (1 - rate) + xs[1] * rate;
	} else if(xs.length == 3) {
		var control = xs[1];
		tmp = (xs[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + xs[2] * rate) * rate;
	} else {
		tmp = tweenxcore_FloatTools._bezier(rate,xs);
	}
	outputPoint.x = tmp;
	var tmp;
	if(ys.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(ys.length == 2) {
		tmp = ys[0] * (1 - rate) + ys[1] * rate;
	} else if(ys.length == 3) {
		var control = ys[1];
		tmp = (ys[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + ys[2] * rate) * rate;
	} else {
		tmp = tweenxcore_FloatTools._bezier(rate,ys);
	}
	outputPoint.y = tmp;
};
tweenxcore_PointTools.uniformQuadraticBSpline = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var p = $getIterator(points);
	while(p.hasNext()) {
		var p1 = p.next();
		xs.push(p1.x);
		ys.push(p1.y);
	}
	var tmp;
	if(xs.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(xs.length == 2) {
		tmp = xs[0] * (1 - rate) + xs[1] * rate;
	} else {
		var max = xs.length - 2;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		var p0 = xs[index];
		var p1 = xs[index + 1];
		var p2 = xs[index + 2];
		tmp = innerRate * innerRate * (p0 / 2 - p1 + p2 / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
	outputPoint.x = tmp;
	var tmp;
	if(ys.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(ys.length == 2) {
		tmp = ys[0] * (1 - rate) + ys[1] * rate;
	} else {
		var max = ys.length - 2;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		var p0 = ys[index];
		var p1 = ys[index + 1];
		var p2 = ys[index + 2];
		tmp = innerRate * innerRate * (p0 / 2 - p1 + p2 / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
	outputPoint.y = tmp;
};
var tweenxcore_MatrixTools = function() { };
tweenxcore_MatrixTools.__name__ = true;
tweenxcore_MatrixTools.createSimilarityTransform = function(outputMatrix,fromX,fromY,toX,toY) {
	var dx = toX - fromX;
	var dy = toY - fromY;
	var rot = Math.atan2(dy,dx);
	var d = Math.sqrt(dx * dx + dy * dy);
	outputMatrix.a = d * Math.cos(rot);
	outputMatrix.b = d * Math.sin(rot);
	outputMatrix.c = -d * Math.sin(rot);
	outputMatrix.d = d * Math.cos(rot);
	outputMatrix.tx = fromX;
	outputMatrix.ty = fromY;
};
var tweenxcore_color_IColor = function() { };
tweenxcore_color_IColor.__name__ = true;
tweenxcore_color_IColor.__isInterface__ = true;
tweenxcore_color_IColor.prototype = {
	__class__: tweenxcore_color_IColor
};
var tweenxcore_color_HsvColor = function(hue,saturation,value) {
	this.h = hue;
	this.s = saturation;
	this.v = value;
};
tweenxcore_color_HsvColor.__name__ = true;
tweenxcore_color_HsvColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_HsvColor.hsvToRgbInt = function(h,s,v) {
	h = (h - Math.floor(h)) * 6;
	var hi = Math.floor(h);
	if(s <= 0.0) {
		s = 0.0;
	} else if(1.0 <= s) {
		s = 1.0;
	}
	if(v <= 0.0) {
		v = 0.0;
	} else if(1.0 <= v) {
		v = 1.0;
	}
	var m = v * (1 - s);
	var f = h - hi;
	var r = 0.0;
	var g = 0.0;
	var b = 0.0;
	switch(hi) {
	case 0:
		r = v;
		g = v * (1 - s * (1 - f));
		b = m;
		break;
	case 1:
		r = v * (1 - s * f);
		g = v;
		b = m;
		break;
	case 2:
		r = m;
		g = v;
		b = v * (1 - s * (1 - f));
		break;
	case 3:
		r = m;
		g = v * (1 - s * f);
		b = v;
		break;
	case 4:
		r = v * (1 - s * (1 - f));
		g = m;
		b = v;
		break;
	case 5:
		r = v;
		g = m;
		b = v * (1 - s * f);
		break;
	}
	return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
};
tweenxcore_color_HsvColor.of = function(color,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	return tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex);
};
tweenxcore_color_HsvColor.fromRgb = function(r,g,b,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var max;
	var min;
	var diff;
	var h;
	if(r < g) {
		if(g < b) {
			max = b;
			min = r;
			diff = max - min;
			h = (4 + (r - g) / diff) / 6;
		} else {
			max = g;
			min = r < b ? r : b;
			diff = max - min;
			h = (2 + (b - r) / diff) / 6;
		}
	} else if(r < b) {
		max = b;
		min = g;
		diff = max - min;
		h = (4 + (r - g) / diff) / 6;
	} else {
		max = r;
		min = g < b ? g : b;
		diff = max - min;
		h = (g - b) / diff / 6;
	}
	if(h < 0) {
		++h;
	}
	var s = diff / max;
	if(isNaN(h)) {
		h = 0;
	}
	if(isNaN(s)) {
		s = 0;
	}
	return new tweenxcore_color_HsvColor(h + hueIndex,s,max);
};
tweenxcore_color_HsvColor.prototype = {
	getRed: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).r;
	}
	,getGreen: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).g;
	}
	,getBlue: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).b;
	}
	,getHue: function() {
		return this.h;
	}
	,getSaturation: function() {
		return this.s;
	}
	,getBrightness: function() {
		return this.v;
	}
	,toRgb: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
	}
	,toHsv: function() {
		return new tweenxcore_color_HsvColor(this.h,this.s,this.v);
	}
	,toHsvWithAlpha: function(alpha) {
		return new tweenxcore_color_AhsvColor(alpha,this.h,this.s,this.v);
	}
	,toRgbWithAlpha: function(alpha) {
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return new tweenxcore_color_ArgbColor(alpha,_this.r,_this.g,_this.b);
	}
	,toRgbInt: function() {
		return tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v);
	}
	,toRgbHexString: function() {
		return StringTools.hex(tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v),6);
	}
	,toRgbCssString: function() {
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return "rgb(" + (_this.r * 255 | 0) + "," + (_this.g * 255 | 0) + "," + (_this.b * 255 | 0) + ")";
	}
	,__class__: tweenxcore_color_HsvColor
};
var tweenxcore_color_ITransparentColor = function() { };
tweenxcore_color_ITransparentColor.__name__ = true;
tweenxcore_color_ITransparentColor.__isInterface__ = true;
tweenxcore_color_ITransparentColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_ITransparentColor.prototype = {
	__class__: tweenxcore_color_ITransparentColor
};
var tweenxcore_color_AhsvColor = function(alpha,hue,saturation,value) {
	this.a = alpha;
	tweenxcore_color_HsvColor.call(this,hue,saturation,value);
};
tweenxcore_color_AhsvColor.__name__ = true;
tweenxcore_color_AhsvColor.__interfaces__ = [tweenxcore_color_ITransparentColor];
tweenxcore_color_AhsvColor.ahsvToArgbInt = function(a,h,s,v) {
	return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(h,s,v);
};
tweenxcore_color_AhsvColor.of = function(color,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var a = (color >>> 24 & 255) / 255;
	var color1 = color & 16777215;
	var hueIndex1 = hueIndex;
	if(hueIndex1 == null) {
		hueIndex1 = 0;
	}
	var r = (color1 >> 16 & 255) / 255;
	var g = (color1 >> 8 & 255) / 255;
	var b = (color1 & 255) / 255;
	var _this = tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex1);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
tweenxcore_color_AhsvColor.fromArgb = function(a,r,g,b,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var _this = tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
tweenxcore_color_AhsvColor.__super__ = tweenxcore_color_HsvColor;
tweenxcore_color_AhsvColor.prototype = $extend(tweenxcore_color_HsvColor.prototype,{
	getAlpha: function() {
		return this.a;
	}
	,toArgb: function() {
		var a = this.a;
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
	}
	,toAhsv: function() {
		return new tweenxcore_color_AhsvColor(this.a,this.h,this.s,this.v);
	}
	,toArgbInt: function() {
		var a = this.a;
		return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v);
	}
	,toArgbHexString: function() {
		var a = this.a;
		return StringTools.hex(((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v),8);
	}
	,toRgbaCssString: function() {
		var a = this.a;
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		var _this1 = new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
		return "rgba(" + (_this1.r * 255 | 0) + "," + (_this1.g * 255 | 0) + "," + (_this1.b * 255 | 0) + "," + _this1.a + ")";
	}
	,__class__: tweenxcore_color_AhsvColor
});
var tweenxcore_color_RgbColor = function(red,green,blue) {
	this.r = red;
	this.g = green;
	this.b = blue;
};
tweenxcore_color_RgbColor.__name__ = true;
tweenxcore_color_RgbColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_RgbColor.rgbToInt = function(r,g,b) {
	if(r <= 0.0) {
		r = 0.0;
	} else if(1.0 <= r) {
		r = 1.0;
	}
	if(g <= 0.0) {
		g = 0.0;
	} else if(1.0 <= g) {
		g = 1.0;
	}
	if(b <= 0.0) {
		b = 0.0;
	} else if(1.0 <= b) {
		b = 1.0;
	}
	return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
};
tweenxcore_color_RgbColor.of = function(color) {
	return new tweenxcore_color_RgbColor((color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255);
};
tweenxcore_color_RgbColor.fromHsv = function(h,s,v) {
	h = (h - Math.floor(h)) * 6;
	var hi = Math.floor(h);
	if(s <= 0.0) {
		s = 0.0;
	} else if(1.0 <= s) {
		s = 1.0;
	}
	if(v <= 0.0) {
		v = 0.0;
	} else if(1.0 <= v) {
		v = 1.0;
	}
	var m = v * (1 - s);
	var f = h - hi;
	var r = 0.0;
	var g = 0.0;
	var b = 0.0;
	switch(hi) {
	case 0:
		r = v;
		g = v * (1 - s * (1 - f));
		b = m;
		break;
	case 1:
		r = v * (1 - s * f);
		g = v;
		b = m;
		break;
	case 2:
		r = m;
		g = v;
		b = v * (1 - s * (1 - f));
		break;
	case 3:
		r = m;
		g = v * (1 - s * f);
		b = v;
		break;
	case 4:
		r = v * (1 - s * (1 - f));
		g = m;
		b = v;
		break;
	case 5:
		r = v;
		g = m;
		b = v * (1 - s * f);
		break;
	}
	return new tweenxcore_color_RgbColor(r,g,b);
};
tweenxcore_color_RgbColor.prototype = {
	getRed: function() {
		return this.r;
	}
	,getGreen: function() {
		return this.g;
	}
	,getBlue: function() {
		return this.b;
	}
	,getHue: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).h;
	}
	,getSaturation: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).s;
	}
	,getBrightness: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).v;
	}
	,toRgb: function() {
		return new tweenxcore_color_RgbColor(this.r,this.g,this.b);
	}
	,toHsv: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b);
	}
	,toRgbWithAlpha: function(alpha) {
		return new tweenxcore_color_ArgbColor(alpha,this.r,this.g,this.b);
	}
	,toHsvWithAlpha: function(alpha) {
		var _this = tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b,0);
		return new tweenxcore_color_AhsvColor(alpha,_this.h,_this.s,_this.v);
	}
	,toRgbInt: function() {
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
	}
	,toRgbHexString: function() {
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return StringTools.hex((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0),6);
	}
	,toRgbCssString: function() {
		return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
	}
	,__class__: tweenxcore_color_RgbColor
};
var tweenxcore_color_ArgbColor = function(alpha,red,green,blue) {
	this.a = alpha;
	tweenxcore_color_RgbColor.call(this,red,green,blue);
};
tweenxcore_color_ArgbColor.__name__ = true;
tweenxcore_color_ArgbColor.__interfaces__ = [tweenxcore_color_ITransparentColor];
tweenxcore_color_ArgbColor.argbToInt = function(a,r,g,b) {
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r1 <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r1) {
		r1 = 1.0;
	}
	if(g1 <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g1) {
		g1 = 1.0;
	}
	if(b1 <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b1) {
		b1 = 1.0;
	}
	return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0));
};
tweenxcore_color_ArgbColor.of = function(color) {
	return new tweenxcore_color_ArgbColor((color >>> 24 & 255) / 255,(color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255);
};
tweenxcore_color_ArgbColor.fromAhsv = function(a,h,s,v,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var _this = tweenxcore_color_RgbColor.fromHsv(h,s,v);
	return new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
};
tweenxcore_color_ArgbColor.__super__ = tweenxcore_color_RgbColor;
tweenxcore_color_ArgbColor.prototype = $extend(tweenxcore_color_RgbColor.prototype,{
	getAlpha: function() {
		return this.a;
	}
	,toArgb: function() {
		return new tweenxcore_color_ArgbColor(this.a,this.r,this.g,this.b);
	}
	,toAhsv: function() {
		var a = this.a;
		var _this = tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b,0);
		return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
	}
	,toArgbInt: function() {
		var a = this.a;
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
	}
	,toArgbHexString: function() {
		var a = this.a;
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return StringTools.hex(((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0)),8);
	}
	,toRgbaCssString: function() {
		return "rgba(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + "," + this.a + ")";
	}
	,__class__: tweenxcore_color_ArgbColor
});
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "problems", data : ""}];
js_Boot.__toStr = ({ }).toString;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
tweenxcore_Easing.PI = 3.1415926535897932384626433832795;
tweenxcore_Easing.PI_H = 1.5707963267948966;
tweenxcore_Easing.LN_2 = 0.6931471805599453;
tweenxcore_Easing.LN_2_10 = 6.931471805599453;
tweenxcore_Easing.overshoot = 1.70158;
tweenxcore_Easing.amplitude = 1;
tweenxcore_Easing.period = 0.0003;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
